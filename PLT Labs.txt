1. Sum all prime numbers which ranges from m to n and printing all prime numbers 

 class Program
    {
        public static bool Check(int num)
        {
            if (num == 1)
            {
                return false;
            }
            for (int i = 2; i * i <= num; i++)
            {
                if (num % i == 0)
                {
		    return false;
                }
            }
            return true;
        }
        static void Main(string[] args)
        {

            Console.WriteLine("Enter value for start point ");
            int m = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter value for end point");
            int n = Convert.ToInt32(Console.ReadLine());

            int sum = 0;
            for(int i = m; i <= n; i++ )
            {
                if (Program.Check(i))
		{
                    Console.Write(i + " ");
                    sum += i;
		}
            }
            Console.WriteLine("\nSum of prime numbers from " + m + " to " + n+ " = "+ sum);
            Console.ReadLine();
        }
    }

*******************************************************
2. Factorial of a given number

 class Program
 {
   	 
    public static void Main()
    {
       	    Console.WriteLine("Enter a number ");
            int num = Convert.ToInt32(Console.ReadLine());
            if (num < 0)
                Console.WriteLine("Factorial of a negative Number is not possible");
            else
                Console.WriteLine("Factorial of " + num + "! = " + Program.fact(num));
            Console.ReadLine();
    }
    
    public static int fact(int num)
    {
      	if (num == 0)
            return 1;
        return (num * fact(num - 1));
    }
}

*******************************************************
3. Ckecking whether the input number belongs to fibonacci series or not

class Program
{
   	
    static bool isPerfectSquare(int num)
    {
        int s = (int)Math.Sqrt(num);
        return (s * s == num);
    }

    static bool isFibo(int num)
    {
        return isPerfectSquare(5 * num * num + 4) ||
            isPerfectSquare(5 * num * num - 4);
    }
    public static void Main()
    {
        
	Console.WriteLine("Enter a number ");
        int num = Convert.ToInt32(Console.ReadLine());
        bool check = Program.isFibo(num);
        if(check)
            Console.WriteLine("The number "+num+ " is a Fibonacci Number");
        else
            Console.WriteLine("The number "+num + " is not a Fibonacci Number");
	Console.ReadLine();
    }
}
*******************************************************

4. Converting Decimal number to binary

class Program
{
   public static void Main()
    {
     	
	int dec,i;
	int[] arr = new int[20];
	Console.WriteLine("Enter a Number : ");
	dec= int.Parse(Console.ReadLine());
	for (i = 0; dec > 0; i++)
	{
    	     arr[i] = dec % 2;
    	     dec = dec / 2;
	}
	Console.Write("Binary of Entered decimal number = ");
	for (i = i - 1; i >= 0; i--)
	{
    		Console.Write(arr[i]);
	}
	
	Console.Read();
    }
}
*******************************************************
5. Converting a number from binary to decimal

class Program
{
   public static void Main()
    {
	Console.WriteLine("Enter the number in Binary  : ");	
	int binary = int.Parse(Console.ReadLine());	
	int dec = 0;
	int base = 1;

	while (binary > 0)
	{
    		int rem = binary % 10;
        	binary = binary / 10;
        	dec += rem * base;
        	base = base * 2;
	}
	Console.Write("Decimal of given binary number is = " + dec);
	Console.Realine();
    }
}	

*******************************************************
6. printing each digit in words format

class Program
{
   
	static void Value(char digit)
            {
		 switch (digit)
                {
                    case '0': Console.Write("Zero "); break;
                    case '1': Console.Write("One "); break;
		    case '2': Console.Write("Two "); break;
                    case '3': Console.Write("Three "); break;
                    case '4': Console.Write("Four "); break;
                    case '5': Console.Write("Five "); break;
                    case '6': Console.Write("Six "); break;
                    case '7': Console.Write("Seven "); break;
                    case '8': Console.Write("Eight "); break;
                    case '9': Console.Write("Nine "); break;
                }
            }

            static void printWord(string N)
            {
                int i, length = N.Length;
		for (i = 0; i < length; i++)
                {
	           Program.Value(N[i]);
                }
            }

	   public static void Main()
   	   {
                Console.WriteLine("Enter a number :");
                string num = Console.ReadLine();
                Program.printWord(num);
		Console.ReadLine();
 	   }
}

*******************************************************
7. Displaying number in word format

namespace PratianTraining
{
    class Program
    {
        static void NumberToWord(char[] num)
        {
            int len = num.Length;

            if (len == 0)
            {
                Console.WriteLine("empty string");
                return;
            }
            if (len > 4)
            {
                Console.WriteLine("Length more than 4 is not supported");
                return;
            }

            string[] single_digits = new string[] {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};

            string[] two_digits = new string[] {"","ten",  "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"};

            string[] tens_multiple = new string[] { "",  "", "twenty", "thirty", "forty","fifty", "sixty", "seventy", "eighty", "ninety"
        };
            string[] tens_power = new string[] { "hundred", "thousand" };

            Console.Write((new string(num)) + ": ");

            if (len == 1)
            {
                Console.WriteLine(single_digits[num[0] - '0']);
                return;
            }

            int x = 0;
            while (x < num.Length)
            {

                if (len >= 3)
                {
                    if (num[x] - '0' != 0)
                    {
                        Console.Write(single_digits[num[x] - '0'] + " ");
                        Console.Write(tens_power[len - 3] + " ");
                    }
                    --len;
                }
                else
                {
                    if (num[x] - '0' == 1)
                    {
                        int sum = num[x] - '0' + num[x + 1] - '0';
                        Console.WriteLine(two_digits[sum]);
                        return;
                    }

                    else if (num[x] - '0' == 2 && num[x + 1] - '0' == 0)
                    {
                        Console.WriteLine("twenty");
                        return;
                    }

                    else
                    {
                        int i = (num[x] - '0');
                        if (i > 0)
                            Console.Write(tens_multiple[i] + " ");
                        else
                            Console.Write("");
                        ++x;
                        if (num[x] - '0' != 0)
                            Console.WriteLine(single_digits[num[x] - '0']);
                    }
                }
                ++x;
            }
        }

        static void Main(string[] args)
        {
            string n;
            Console.WriteLine("Enter the number : ");
            num = Console.ReadLine();
            NumberToWord(num.ToCharArray());
            Console.ReadLine();
        }


    }

}

*******************************************************

// 8. Accepting the details of the item and performing operations

 class Program
 {
    static void Main(string[] args)
        {
	 double grandTotal = 0;
            while (true)
            {
                int total = 0;
                Console.WriteLine("Enter y or n to continue..");
                char choice = Convert.ToChar(Console.ReadLine());
                if (choice == 'y')
                {
                    Console.WriteLine();
                    Console.WriteLine("Enter item code : ");
                    int itemCode = Convert.ToInt32(Console.ReadLine());

                    Console.WriteLine("Enter item description ");
                    string desc = Console.ReadLine();
                    
                    Console.WriteLine("Enter No. of quantity : ");
                    int qty = Convert.ToInt32(Console.ReadLine());
                    
                    Console.WriteLine("Enter price of product : ");
                    int price = Convert.ToInt32(Console.ReadLine());

                    total += qty * price;
                    grandTotal += total;
                }
                else
                {
                    Console.WriteLine("You chose No");
                    break;
                }

                if (grandTotal > 10000)
                {
                    Console.WriteLine("You have got a 10% discount on that!");
                    grandTotal -= (grandTotal * 10) / 100;
                }
                if (grandTotal < 1000)
                {
                    Console.WriteLine("Do you want to pay by Card? y or n");
                    char ch = Convert.ToChar(Console.ReadLine());
                    if (ch == 'y')
                        grandTotal += (2.5 * grandTotal) / 100;
                }

            }
                Console.WriteLine("Grand Total = " + grandTotal);

                NumberToWord(Convert.ToString(grandTotal).ToCharArray());

        }
	 
       static void NumberToWord(char[] num)
        {
            int len = num.Length;

            if (len == 0)
            {
                Console.WriteLine("empty string");
                return;
            }
            if (len > 4)
            {
                Console.WriteLine("Length more than 4 is not supported");
                return;
            }

            string[] single_digits = new string[] {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};

            string[] two_digits = new string[] {"","ten",  "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"};

            string[] tens_multiple = new string[] { "",  "", "twenty", "thirty", "forty","fifty", "sixty", "seventy", "eighty", "ninety"
        };
            string[] tens_power = new string[] { "hundred", "thousand" };

            Console.Write((new string(num)) + ": ");

            if (len == 1)
            {
                Console.WriteLine(single_digits[num[0] - '0']);
                return;
            }

            int x = 0;
            while (x < num.Length)
            {

                if (len >= 3)
                {
                    if (num[x] - '0' != 0)
                    {
                        Console.Write(single_digits[num[x] - '0'] + " ");
                        Console.Write(tens_power[len - 3] + " ");
                    }
                    --len;
                }
                else
                {
                    if (num[x] - '0' == 1)
                    {
                        int sum = num[x] - '0' + num[x + 1] - '0';
                        Console.WriteLine(two_digits[sum]);
                        return;
                    }

                    else if (num[x] - '0' == 2 && num[x + 1] - '0' == 0)
                    {
                        Console.WriteLine("twenty");
                        return;
                    }

                    else
                    {
                        int i = (num[x] - '0');
                        if (i > 0)
                            Console.Write(tens_multiple[i] + " ");
                        else
                            Console.Write("");
                        ++x;
                        if (num[x] - '0' != 0)
                            Console.WriteLine(single_digits[num[x] - '0']);
                    }
                }
                ++x;
            }
        }

}

*******************************************************

// 9 Printing different series

 class Program
 {
    static void Main(string[] args)
        {
 	    Console.WriteLine("Enter  number : ");
            int num = Convert.ToInt32(Console.ReadLine());
	   
            Console.WriteLine("\n Fibonacci Series  : ");	
            for (int i = 1; i < num; i++)
            {
                Console.Write(Fibonacci(i) + " " );
            }
	   
	    Console.WriteLine("\n Series 2 : ");	
	    Program.Series2(num);

	    Console.WriteLine("\n Series 3 : ");	
	    Program.Series3(num);
            Console.ReadLine();
	}
	
    static int Fibonacci(int n)
        {
            int f1 = 0, f2 = 1, result = 0;

            if (n == 0) return 0;  
            if (n == 1) return 1;  


            for (int i = 2; i <= n; i++)
            {
                result = f1 + f2;
                f1 = f2;
                f2 = result;
            }

            return result;
        }

    static void Series2(int num)
        {
            int oddPos = 1;
            int evenPos = 2;
            for (int i = 1; i <= num; i++)
            {
                if (i == 1)
                    Console.Write(oddPos + " " );
                
                else if (i == 2)              
                    Console.Write(evenPos + " ");

                else if (i % 2 == 0)
                {
                    evenPos += 4; 
                    Console.Write(evenPos+ " ");

                }
                else
                {
                    oddPos += 3;
                    Console.Write(oddPos+ " ");
                }
            }
        }
	
     static void Series3(int num)
        {
            int n1 = 1, n2 = 5, n3 = 8, n4;
            Console.Write(n1 + " " + n2 + " " + n3 + " ");
            for (int i = 3; i < num; i++)
            {
                n4 = n1 + n2 + n3;
               
                n1 = n2;  n2 = n3; n3 = n4;
                Console.Write(n4+" ");
            }
        }

}	 


*******************************************************
10. Printing x to the Power of n

 class Program
 {
    static void Main(string[] args)
        {
	    Console.WriteLine("Enter  x ");
            int x = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter  n ");
            int n = Convert.ToInt32(Console.ReadLine());
            int pow = 1;
            for (int i = 0; i < n; i++)
            {
                pow *= x;
            }
            Console.WriteLine(x + " Power of " + n + " = "+ pow);


            Console.ReadLine();
	}
}

*******************************************************

11. Checking palindrome for input string

 class Program
 {
    static void Main(string[] args)
        {
            Console.WriteLine("Enter string : ");
            string str = Console.ReadLine();


            int i = 0;
            int j = str.Length-1;

            while(i<=j)
            {
                if(str[i] != str[j])
                {
                    Console.WriteLine("Given string is not pallindrome");
                    Console.ReadLine();
                    return;
                }
                i++; j--;
            }

            Console.WriteLine("Given string is pallindrome");

            Console.ReadLine();
        }
 }
*******************************************************
12. Linear search operation on array

 class Program
 {
    static void Main(string[] args)
        {
            Console.WriteLine("Enter the array size ");
            int num = Convert.ToInt32(Console.ReadLine());

            int[] array = new int[num];

            Console.WriteLine("Enter elements");
            for (int i = 0; i < num; i++)
                array[i] = Convert.ToInt32(Console.ReadLine());
	    Console.WriteLine("Elements are ");
	    for (int i = 0; i < num; i++)
                Console.WriteLine(array[i]);

            Console.WriteLine("Enter the key element to be searched ");
            int key = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < num; i++)
            {
                if(array[i] == key)
                {
                    Console.WriteLine("Element is found");
                    Console.ReadLine();
                    return;
                }
            }
            Console.WriteLine("Element is not found");
            Console.ReadLine();

       }
 }

*************************************************

13.  Binary search operation on array

 class Program
    {
       static void Main(string[] args)
        {
 	    Console.WriteLine("Enter the array size ");
            int num = Convert.ToInt32(Console.ReadLine());

            int[] array = new int[num];

            Console.WriteLine("Enter elements");
            for (int i = 0; i < num; i++)
                array[i] = Convert.ToInt32(Console.ReadLine());
 	    Console.WriteLine("Elements are ");
	    for (int i = 0; i < num; i++)
                Console.WriteLine(array[i]);

            Console.WriteLine("Enter the key element to be searched ");
            int key = Convert.ToInt32(Console.ReadLine());

            Array.Sort(array);

            int start = 0;
            int last = num - 1;
            bool check = false;

            int first = 0;
            int last = array.Length - 1;

            while (first <= last)
            {
                int mid = (first + last) / 2;
                if (key == array[mid])
                {
                    Console.WriteLine("Element is found at position = " + (mid + 1));
                    Console.ReadLine();
                    return;
                }
                else if (key < array[mid])
                {
                    last = mid - 1;
                }
                else
               {
                   first = mid + 1;
               }
            }

            Console.WriteLine("Element is not found");
            Console.ReadLine();

   }
}

********************************************
14. Storing elements in matrix and display

 class Program
    {
       static void Main(string[] args)
        {
	    Console.WriteLine("Enter number of rows");
            int m = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter columns ");
            int n = Convert.ToInt32(Console.ReadLine());
            int[,] matrix = new int[m,n];

            Console.WriteLine("Enter elements ");
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    matrix[i,j] = Convert.ToInt32(Console.ReadLine());
                }
            }

            Console.WriteLine("Elements are ");
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(matrix[i,j] + " ");
                }
                Console.WriteLine();
            }

            Console.WriteLine("Transpose of matrix is  ");
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(matrix[j,i] + " ");
                }
                Console.WriteLine();
            }
    }
}

*******************************************
15. Check whether the matrix is identity or not

class Program
    {
       static void Main(string[] args)
        {
	   
            Console.WriteLine("Enter n");
            int n = Convert.ToInt32(Console.ReadLine());
            int[,] matrix = new int[n, n];

            Console.WriteLine("Enter elements ");
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }

            bool check = true;
            
                for (int i = 0; i < n; i++)
                {
                    for (int j = 0; j < n; j++)
                    {
                        if (i != j && matrix[i, j] > 1)
                        {
                            check = false;
                            break;
                        }
                        else if (i == j && matrix[i, j] != 1)
                        {
                            check = false;
                            break;
                        }

                    }

                }
           
            if(check)
                Console.WriteLine("Matrix is Identity");
            else
                Console.WriteLine("Matrix is Not Identity");

    }
}
********************************************

16. Check whether the matrix is symmetric or not

class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter N");
            int n = Convert.ToInt32(Console.ReadLine());
            int[,] matrix = new int[n, n];
            Console.WriteLine("Enter elements ");
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
            bool check = true;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                   if(matrix[i,j] != matrix[j,i] )
                    {
                        check = false;
                        break;
                    }
                }
            }

            if(check)
                Console.WriteLine("Matrix is symmetric");
            else
                Console.WriteLine("matrix is not symmetric");
            Console.Read();
        }
    }
*****************************************
17. Addition, Subtraction and multiplication of matrix

 class Program
    {
        static void Main(string[] args)
        {	    
	   Console.WriteLine("Enter number of rows");
            int m1 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter columns ");
            int n1 = Convert.ToInt32(Console.ReadLine());
            int[,] matrix1 = new int[m1, n1];
            Console.WriteLine("Enter elements for matrix 1 ");
            for (int i = 0; i < m1; i++)
            {
                for (int j = 0; j < n1; j++)
                {
                    matrix1[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
            for (int i = 0; i < m1; i++)
            {
                for (int j = 0; j < n1; j++)
                {
                    Console.Write(matrix1[i, j] + " ");
                }

                Console.WriteLine();
            }
            Console.WriteLine("Matrix 2");

            Console.WriteLine("Enter number of rows");
            int m2 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter columns ");
            int n2 = Convert.ToInt32(Console.ReadLine());
            int[,] matrix2 = new int[m2, n2];
            Console.WriteLine("Enter elements matrix 2");
            for (int i = 0; i < m2; i++)
            {
                for (int j = 0; j < n2; j++)
                {
                    matrix2[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
          
            for (int i = 0; i < m2; i++)
            {
                for (int j = 0; j < n2; j++)
                {
                    Console.Write(matrix2[i, j] + " ");
                }

                Console.WriteLine();
            }

            Program.AddMatrix(matrix1,matrix2,m1,n1);
            Program.SubMatrix(matrix1, matrix2, m1, n1);
            if(n1 != m2)
            {
                Console.WriteLine("Multuplication is not possible");
                return;
            }
            else
            {
                Program.MultMatrix(matrix1,matrix2,m2,n1);
            }

            Console.Read();
        }

        static void AddMatrix(int[,] matrix1, int[,] matrix2, int m, int n)
        {
            int[,] sum = new int[m, n];
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    sum[i, j] = matrix1[i, j] + matrix2[i, j];
                }
            }
            Console.WriteLine("Sum of 2 matrices ");

            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(sum[i, j] + " ");
                }

                Console.WriteLine();
            }

        }

        static void SubMatrix(int[,] matrix1, int[,] matrix2, int m, int n)
        {
            int[,] sub = new int[m, n];
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    sub[i, j] = matrix1[i, j] - matrix2[i, j];
                }
            }
            Console.WriteLine("matrix after subtract ");

            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(sub[i, j] + " ");
                }

                Console.WriteLine();
            }

        }
        static void MultMatrix(int[,] matrix1, int[,] matrix2, int m, int n)
        {
           int[,] mult = new int[m, n];
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    mult[i, j] = 0;
                    for (int k = 0; k < n; k++) 
                        mult[i, j] = mult[i, j] + matrix1[i, k] * matrix2[k, j];
                }
            }

            Console.WriteLine("matrix after multiplication ");

            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(mult[i, j] + " ");
                }

                Console.WriteLine();
            }
        
        }
}

*****************************************
18. Printing different patterns

class Program
    {
       static void Main(string[] args)
        {
	     
            Console.WriteLine("Enter  n ");
            int num = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("1. Star Print");
            Program.StarPrint(num);
            Console.WriteLine("2. Printing Row numbers");
            Program.RowNumerPrint(num);
            Console.WriteLine("3. Printing Column numbers");
            Program.ColumnNumerPrint(num);
            Console.WriteLine("4. Star pattern lower triangle");
            Program.Print(num);

            Console.ReadLine();
        }

	 static void StarPrint(int n)
        {
            for (int i = 0; i < n; i++)
            {           
                    Console.WriteLine("* * * * *");             
            }
            Console.WriteLine();

        }

        static void RowNumerPrint(int n)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(i+1 + " ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();

        }

        static void ColumnNumerPrint(int n)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(j + 1 + " ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();

        }

        static void Print(int n)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    Console.Write("* ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();

        }
}

************************************

19. Printing patterns

class Program
{
       static void Main(string[] args)
        {
	     Console.WriteLine("Enter  n : ");
            int num = Convert.ToInt32(Console.ReadLine());

            Console.WriteLine("1. Column number in lower triangle");
            Program.PrinColumnNumber(num);
            Console.WriteLine("2. Row number in lower triangle");
            Program.PrinRowNumber(num);
            Console.WriteLine("3. Printing Count");
            Program.PrintCount(num);
            Console.WriteLine("4. Printing Fibonacci");
            Program.PrintFibo(num);

            Console.ReadLine();
        }

        static void PrinColumnNumber(int n)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    Console.Write( j + 1 + " ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();
        }

        static void PrinRowNumber(int n)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    Console.Write(i + 1 + " ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();
        }
        
        static void PrintCount(int n)
        {
            int count = 1;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    Console.Write(count++ + " ");
                }
                Console.WriteLine();
            }
            Console.WriteLine();
        }

	static void PrintFibo(int n)
        {
            int f1 = 0, f2 = 1;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    int temp = f2;
                    Console.Write(f1+f2 + " ");
                    f2 = f1 + f2;
                    f1 = temp;
                }
                Console.WriteLine();
            }
            Console.WriteLine();
        }
}

*******************************************************

// 20 Printing different kind of patterns

class Program
{
       static void Main(string[] args)
        {
	    Console.WriteLine("Enter  n ");
            int num = Convert.ToInt32(Console.ReadLine());
           
            Console.WriteLine("1. Printing Square ");
            Program.SquareOfCount(num);
            Console.WriteLine("2. Printing Factorial ");
            Program.PrintFact(num);
            Console.WriteLine("3. Printing Reverse pattern");
            Program.PrintReversePattern(num);
            Console.WriteLine("4. Printing Lower triangular pattern ");
            Program.PrintLowerPattern(num);
	    Console.ReadLine();

        }
	
	 static void SquareOfCount(int n)
        {
            int count = 1;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    if(count % 2 == 0 )
                        Console.Write("-" + (count * count) + " ");
                    else
                        Console.Write((count * count) + " ");
                    count++;
                }
                Console.WriteLine();
            }           
        }
        
        static void PrintFact(int n)
        {
            int count = 1;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {                
                    Console.Write(Program.fact(count) + " ");
                    count++;
                }
                Console.WriteLine();
            }           
        }

	 public static int fact(int num)
        {
            if (num == 0)
                return 1;
            return (num * fact(num - 1));
        }

   
        static void PrintLowerPattern(int n)
        {

            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j <= i; j++)
                {
                    Console.Write("* ");
                }
                Console.WriteLine();
            }
        }

	static void PrintReversePattern(int n)
        {
            int i, j, k;
            for (i = 1; i <= n; i++)
            {
                for (j = 1; j <= n - i; j++)
                {
                    Console.Write(" ");
                }
                for (k = 1; k <= i; k++)
                {
                    Console.Write("*");
                }
                Console.WriteLine("");
            }
        }
}

*******************************************************

// 21  LCM of any number of numbers
class Program
{
       static void Main(string[] args)
        {
	    Console.WriteLine("Enter any number of elements ");
            List<int> list = new List<int>();
            int ch = 1;

            while(ch == 1)
            {
                list.Add(Convert.ToInt32(Console.ReadLine()));
                Console.WriteLine("Do you want to enter again? press 1 to continue and 0 to stop . ");
                ch = Convert.ToInt32(Console.ReadLine());
            }

            int n = list.Count;
            int[] array = new int[n];
            array = list.ToArray(); 
            Console.WriteLine("LCM  = " + Program.LCMOfArray(array));
            Console.ReadLine();
	}

       public static long LCMOfArray(int[] array)
        {
            long val = 1;
            int div = 2;

            while (true)
            {
                int count = 0;
                bool divisible = false;
                for (int i = 0; i < array.Length; i++)
                {
                    if (array[i] == 0)
                          return 0;
                    else if (array[i] < 0)
                        array[i] = array[i] * (-1);
                    if (array[i] == 1)
                        count++;
                    if (array[i] % div == 0)
                    {
                        divisible = true;
                        array[i] = array[i] / div;
                    }
                }
                if (divisible)
                {
                    val = val * div;
                }
                else
                    div++;

                if (count == array.Length)
                    return val;
            }
        }

}

*******************************************************

// 22. LCM of an array

class Program
{
       static void Main(string[] args)
        {
   	    Console.WriteLine("Enter array size ");
            int num = Convert.ToInt32(Console.ReadLine());
            int[] arr = new int[num];
            Console.WriteLine("Enter elements matrix 2");
            for (int i = 0; i < num; i++)
            {              
                    arr[i] = Convert.ToInt32(Console.ReadLine());             
            }
            Console.WriteLine("LCM of array is = " +Program.LCMOfArray(arr));
            Console.ReadLine();
        }

        public static long LCMOfArray(int[] array)
        {
            long val = 1;
            int div = 2;

            while (true)
            {
                int count = 0;
                bool divisible = false;
                for (int i = 0; i < array.Length; i++)
                {
                    if (array[i] == 0)
                          return 0;
                    else if (array[i] < 0)
                        array[i] = array[i] * (-1);
                    if (array[i] == 1)
                        count++;
                    if (array[i] % div == 0)
                    {
                        divisible = true;
                        array[i] = array[i] / div;
                    }
                }
                if (divisible)
                {
                    val = val * div;
                }
                else
                    div++;

                if (count == array.Length)
                    return val;
            }
       }
}